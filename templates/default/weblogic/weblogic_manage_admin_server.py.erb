import time
import socket

# connect('<%= node[:atg][:weblogic][:username] %>','<%= node[:atg][:weblogic][:password] %>','t3://<%= node[:atg][:weblogic][:domain_name] %>:<%= node[:atg][:weblogic][:port] %>')

adminusername = '<%= node[:atg][:weblogic][:username] %>';
adminpassword = '<%= node[:atg][:weblogic][:password] %>';

domainlocation = '<%= node[:weblogic][:domain_home] %>/<%= node[:weblogic][:domain_name] %>';
nodemanagerhomelocation = '<%= node[:weblogic][:weblogic_home] %>/common/nodemanager';

connection_timeout = 300
connection_delay = 10


def nmOpenConnection(retries=0):
    if connection_timeout < connection_delay * retries:
    	return
    try:
		nmConnect(adminusername, adminpassword, 'localhost', '5556', '<%= node[:weblogic][:domain_name] %>', domainlocation, 'ssl');
    except:
        retries+=1
        print "Waiting"
        time.sleep(connection_delay)
        nmOpenConnection(retries)


try:
	nmEnroll(domainlocation,nodemanagerhomelocation)

	print 'CONNECTING TO NODE MANAGER';
	nmOpenConnection()

    <% if @action == :start %>
    	print 'STARTING ADMIN SERVER';
    	nmStart('AdminServer');
    <% elsif @action == :stop %>
        print 'STOPPING ADMIN SERVER';
        nmKill('AdminServer');
    <% else %>
        raise ValueError("Unknown action parameter! (Supports :start / :stop only)")
    <% end %>
except:
	raise EnvironmentError(dumpStack())
exit()